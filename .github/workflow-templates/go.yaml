name: Gazebo Go
on:
  push:
    branches: [ $default-branch ]
  pull_request:

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: go fmt
        run: go fmt ./...
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          cache: true

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  vet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: go vet
        run: go vet ./...
  test:
    needs: vet
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306
        env:
          MYSQL_USER: gazebo
          MYSQL_PASSWORD: 1234
          MYSQL_DATABASE: gazebo_db
          MYSQL_ROOT_PASSWORD: 1234
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Verify MySQL connection
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done          

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Test
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.tx -v ./...
          go tool cover -func=coverage.tx -o=coverage.out
